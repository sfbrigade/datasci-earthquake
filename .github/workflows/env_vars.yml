name: Generate .env File

on:
  push:
    branches:
      - add_ci_and_linting    
  workflow_dispatch:

jobs:
  create-envfile:
 
    runs-on: ubuntu-latest
 
    steps:
    - name: Make envfile
      uses: SpicyPizza/create-envfile@v2.0
      with:
        envkey_POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        envkey_POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        envkey_POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        envkey_POSTGIS_VERSION: ${{ secrets.POSTGIS_VERSION }}

        envkey_FRONTEND_HOST: ${{ secrets.FRONTEND_HOST }}
        envkey_DATABASE_URL: ${{ secrets.DATABASE_URL }}
        envkey_LOCALHOST_DATABASE_URLN: ${{ secrets.LOCALHOST_DATABASE_URL }}
        envkey_DATABASE_URL_SQLALCHEMY: ${{ secrets.DATABASE_URL_SQLALCHEMY }}
        envkey_LOCALHOST_DATABASE_URL_SQLALCHEMY: ${{ secrets.LOCALHOST_DATABASE_URL_SQLALCHEMY }}
        envkey_ENVIRONMENT: ${{ secrets.ENVIRONMENT }}
        envkey_SECRET_KEY: ${{ secrets.SECRET_KEY }}

        envkey_NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
        envkey_NEXT_PUBLIC_MAPBOX_TOKEN: ${{ secrets.NEXT_PUBLIC_MAPBOX_TOKEN }}
        envkey_NODE_ENV: ${{ secrets.NODE_ENV }}

        file_name: .env
        directory: './'
        fail_on_empty: false
        sort_keys: false

    - name: Verify .env File Creation
      run: |
        echo "Listing files to verify .env creation"
        ls -la
        cat .env

    - name: Upload .env as Artifact
      uses: actions/upload-artifact@v3
      with:
        name: env-file
        path: .env        

  # generate-env-file:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v4

  #     - name: Generate .env File
  #       env:
  #         POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
  #         POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  #         POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
  #         POSTGIS_VERSION: ${{ secrets.POSTGIS_VERSION }}
          
  #         FRONTEND_HOST: ${{ secrets.FRONTEND_HOST }}
  #         DATABASE_URL: ${{ secrets.DATABASE_URL }}
  #         LOCALHOST_DATABASE_URL: ${{ secrets.LOCALHOST_DATABASE_URL }}
  #         DATABASE_URL_SQLALCHEMY: ${{ secrets.DATABASE_URL_SQLALCHEMY }}
  #         LOCALHOST_DATABASE_URL_SQLALCHEMY: ${{ secrets.LOCALHOST_DATABASE_URL_SQLALCHEMY }}
  #         ENVIRONMENT: ${{ secrets.ENVIRONMENT }}
  #         SECRET_KEY: ${{ secrets.SECRET_KEY }}
          
  #         NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
  #         NEXT_PUBLIC_MAPBOX_TOKEN: ${{ secrets.NEXT_PUBLIC_MAPBOX_TOKEN }}
  #         NODE_ENV: ${{ secrets.NODE_ENV }}
  #       run: |
  #         echo "Generating .env file..."
  #         echo "POSTGRES_USER=${POSTGRES_USER}" >> .env
  #         echo "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}" >> .env
  #         echo "POSTGRES_DB=${POSTGRES_DB}" >> .env
  #         echo "POSTGIS_VERSION=${POSTGIS_VERSION}" >> .env

  #         echo "FRONTEND_HOST=${FRONTEND_HOST}" >> .env
  #         echo "DATABASE_URL=${DATABASE_URL}" >> .env
  #         echo "LOCALHOST_DATABASE_URL=${LOCALHOST_DATABASE_URL}" >> .env
  #         echo "DATABASE_URL_SQLALCHEMY=${DATABASE_URL_SQLALCHEMY}" >> .env
  #         echo "LOCALHOST_DATABASE_URL_SQLALCHEMY=${LOCALHOST_DATABASE_URL_SQLALCHEMY}" >> .env
  #         echo "ENVIRONMENT=${ENVIRONMENT}" >> .env
  #         echo "SECRET_KEY=${SECRET_KEY}" >> .env

  #         echo "NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}" >> .env
  #         echo "NEXT_PUBLIC_MAPBOX_TOKEN=${NEXT_PUBLIC_MAPBOX_TOKEN}" >> .env
  #         echo "NODE_ENV=${NODE_ENV}" >> .env

  #     - name: Upload .env as Artifact
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: env-file
  #         path: .env         