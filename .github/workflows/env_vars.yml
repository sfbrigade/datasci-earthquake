name: Generate .env File

on:
  workflow_dispatch:

jobs:
  create-envfile:

    runs-on: ubuntu-latest

    steps:
    - name: Make envfile
      uses: SpicyPizza/create-envfile@v2.0
      with:
        envkey_POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        envkey_POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        envkey_POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        envkey_POSTGIS_VERSION: ${{ secrets.POSTGIS_VERSION }}

        envkey_NEON_URL: ${{ secrets.NEON_URL }}
        envkey_FRONTEND_HOST: ${{ secrets.FRONTEND_HOST }}
        envkey_DATABASE_URL_SQLALCHEMY: ${{ secrets.DATABASE_URL_SQLALCHEMY }}
        envkey_DATABASE_URL_SQLALCHEMY_TEST: ${{ secrets.DATABASE_URL_SQLALCHEMY_TEST }}
        envkey_LOCALHOST_DATABASE_URL_SQLALCHEMY: ${{ secrets.LOCALHOST_DATABASE_URL_SQLALCHEMY }}
        envkey_ENVIRONMENT: local

        envkey_NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
        envkey_NEXT_PUBLIC_MAPBOX_TOKEN: ${{ secrets.NEXT_PUBLIC_MAPBOX_TOKEN }}
        envkey_NODE_ENV: ${{ secrets.NODE_ENV }}
        envkey_NEXT_PUBLIC_CDN_URL: http://localhost:3000/data

        file_name: .env
        directory: './'
        fail_on_empty: false
        sort_keys: false
    - name: Encrypt .env file using OpenSSL
      run: openssl aes-256-cbc -salt -pbkdf2 -k "$ARTIFACT_PASS" -in .env -out .env.enc
      env:
        ARTIFACT_PASS: ${{ secrets.ARTIFACT_PASS }}        

    - name: Upload .env as an encrypted Artifact
      uses: actions/upload-artifact@v4
      with:
        name: encrypted-env-file
        include-hidden-files: true
        path: ./.env.enc