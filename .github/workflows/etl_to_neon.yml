name: ETL to neon

# Workflow triggers
on:
  schedule:
    - cron: "0 2 * * 0"  # Runs at 2am UTC every Sunday
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  run-etl:
    runs-on: ubuntu-latest
    outputs:
      changes: ${{ steps.detect_changes.outputs.changes }}    

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Get Run ID of Most Recent Successful Run
        id: get_run_id
        run: |
          response=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/sfbrigade/datasci-earthquake/actions/workflows/env_vars.yml/runs?status=completed&conclusion=success")
          run_id=$(echo $response | jq '.workflow_runs[0].id')
          echo "Run ID: $run_id"
          echo "run_id=$run_id" >> $GITHUB_ENV     

      - name: Download .env Artifact 
        uses: actions/download-artifact@v4
        with:
          name: encrypted-env-file
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: sfbrigade/datasci-earthquake
          run-id: ${{ env.run_id }}    

      - name: Decrypt .env File
        run: |
          openssl aes-256-cbc -d -salt -pbkdf2 -k "${{ secrets.ARTIFACT_PASS }}" -in .env.enc -out .env
          echo "Decryption complete"      

      - name: Override an env variable
        run: echo "ENVIRONMENT=ci" >> .env
        
      - name: Clear previous ETL data
        run: |
          rm -rf public/data/*
          echo "Cleared old ETL data from public/data"        
          
      - name: ETL data to Neon DB
        run: |
          python -m backend.etl.tsunami_data_handler
          python -m backend.etl.soft_story_properties_data_handler
          python -m backend.etl.liquefaction_data_handler

      - name: Commit changes
        id: detect_changes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git add public/data/*.geojson
          if git diff --cached --quiet; then
            echo "No changes to commit"
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            git commit -m "Update datasets (ETL auto-update)"
            echo "changes=true" >> $GITHUB_OUTPUT
          fi
          
      - name: Push to develop
        if: steps.detect_changes.outputs.changes == 'true'
        run: |
          git push https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }} HEAD:develop
    
  push-main:
    needs: run-etl
    if: needs.run-etl.outputs.changes == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code from develop
        uses: actions/checkout@v4
        with:
          ref: develop
          fetch-depth: 0

      - name: Push latest commit to main
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git push https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }} HEAD:main