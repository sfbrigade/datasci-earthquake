name: CI Pipeline

on: 
    push:
        branches:
            - master
    pull_request: 
        types: [opened, synchronize, reopened]         
        branches:
            - master

jobs:
  eslint:
    runs-on: ubuntu-latest
    steps:    
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install Node.js dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

  black_lint_and_mypy_type_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: | 
          pip install black mypy
          pip install fastapi pydantic pydantic-settings sqlalchemy GeoAlchemy2 pytest     
      - name: Check code formatting with black
        run: black --check .

      - name: Type check with mypy
        run: mypy --config-file mypy.ini .

  docker_build_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Get Run ID of Most Recent Successful Run
        id: get_run_id
        run: |
          response=$(curl -s -H "Authorization: token ${{ secrets.GH_PAT }}" \
            "https://api.github.com/repos/sfbrigade/datasci-earthquake/actions/workflows/env_vars.yml/runs?status=completed&conclusion=success")
          run_id=$(echo $response | jq '.workflow_runs[0].id')
          echo "Run ID: $run_id"
          echo "run_id=$run_id" >> $GITHUB_ENV        
      - name: Download .env Artifact 
        uses: actions/download-artifact@v4
        with:
          name: env-file
          github-token: ${{ secrets.GH_PAT }}
          repository: sfbrigade/datasci-earthquake
          run-id: ${{ env.run_id }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-      
      - name: Build Docker Containers
        run: docker compose build 

      - name: Start Services
        run: docker compose up -d  

      - name: Run Backend Tests
        run: docker compose run backend pytest backend/database/tests

      - name: Run Frontend Tests
        run: docker compose run frontend npm test 

      - name: Clean Up
        run: docker compose down --volumes